services:
  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:latest"
    volumes:
      - /PATH_TO_YOUR_CONFIG:/config
      - /etc/localtime:/etc/localtime:ro
      - /run/dbus:/run/dbus:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration
      - ./configs/homarr/configs:/app/data/configs
      - ./configs/homarr/icons:/app/public/icons
      - ./configs/homarr/data:/data
    ports:
      - '80:7575'

# This is the Media server part
  qbittorrent:
    container_name: qbittorrent
    image: ghcr.io/hotio/qbittorrent:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Etc/UTC
      - WEBUI_PORTS=8080/tcp,8080/udp
    volumes:
      - ./configs/qbitconfig:/config
      - /mnt/storage/Media/downloads:/app/qBittorrent/downloads

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./configs/sonarrconfig:/config
      - /mnt/storage/Media/downloads:/app/qBittorrent/downloads #optional
      - /mnt/storage/Media/tv:/tv #optional
      - /mnt/storage/Media/anime:/anime #optional
    ports:
      - 8989:8989
    restart: unless-stopped


  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./configs/radarrconfig:/config
      - /mnt/storage/Media/movies:/movies #optional
      - /mnt/storage/Media/downloads:/app/qBittorrent/downloads #optional
    ports:
      - 7878:7878
    restart: unless-stopped


  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /mnt/storage/configs/jellyconfig:/config
      - /mnt/storage/Media/tv:/data/tvshows
      - /mnt/storage/Media/movies:/data/movies
      - /mnt/storage/Media/anime:/data/anime
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    ports:
      - 8096:8096
    restart: unless-stopped


  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - VERSION=docker
      - PLEX_CLAIM= #optional
    volumes:
      - ./configs/plexconfig:/config
      - /mnt/storage/Media/tv:/data/tvshows
      - /mnt/storage/Media/movies:/data/movies
      - /mnt/storage/Media/anime:/data/anime
    ports:
      - 32400:32400/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ./configs/prowlarrconfig:/config
    ports:
      - 9696:9696
    restart: unless-stopped


  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - TZ=Europe/London
    ports:
      - 8191:8191
    restart: unless-stopped


  jellyseerr:
    container_name: jellyseerr
    image: ghcr.io/hotio/jellyseerr
    ports:
      - "5055:5055"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Etc/UTC
    volumes:
      - ./configs/jellyseerrconfig:/config
# The end of the Media server part

# Network-wide AdBlock
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "8800:80/tcp"
    environment:
      TZ: 'America/Chicago'
      # WEBPASSWORD: 'set a secure password here or it will be random'
      WEBPASSWORD: 'casaos'

    # Volumes store your data between container upgrades
    volumes:
      - './configs/pi-hole/etc-pihole:/etc/pihole'
      - './configs/pi-hole/etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
